- name: Github
  definition:
    url_from_env: GITHUB_GRAPHQL_ENDPOINT
    timeout_seconds: 60
    headers:
      - name: Authorization
        value_from_env: GITHUB_GRAPHQL_TOKEN
    forward_client_headers: true
  comment: ""
  permissions:
    - role: user
      definition:
        schema: |
          scalar URI
          type PageInfo {
            hasNextPage: Boolean!
            hasPreviousPage: Boolean!
          }
          type Query {
            search(first: Int, query: String!, type: SearchType!): SearchResultItemConnection!
          }
          type SearchResultItemConnection {
            codeCount: Int!
            discussionCount: Int!
            issueCount: Int!
            nodes: [SearchResultItem]
            pageInfo: PageInfo!
            repositoryCount: Int!
            userCount: Int!
            wikiCount: Int!
          }
          type User {
            avatarUrl: URI!
            login: String!
            name: String
          }
          union SearchResultItem = User
          enum SearchType {
            USER
          }
    - role: anonymous
      definition:
        schema: |
          scalar URI
          type PageInfo {
            hasNextPage: Boolean!
            hasPreviousPage: Boolean!
          }
          type Query {
            search(first: Int, query: String!, type: SearchType!): SearchResultItemConnection!
          }
          type SearchResultItemConnection {
            codeCount: Int!
            discussionCount: Int!
            issueCount: Int!
            nodes: [SearchResultItem]
            pageInfo: PageInfo!
            repositoryCount: Int!
            userCount: Int!
            wikiCount: Int!
          }
          type User {
            avatarUrl: URI!
            login: String!
            name: String
          }
          union SearchResultItem = User
          enum SearchType {
            USER
          }
