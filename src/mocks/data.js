const getUser = (i, services) => ({
  id: `user-id-${i}`,
  arrival: null,
  departure: null,
  services,
})

const getZammadServiceAccount = (i) => ({
  id: `zammad-service-id-${i}`,
  data: {
    id: 2808,
    fax: "",
    vip: false,
    web: `https://github.com/user${i}`,
    zip: "",
    city: "",
    note: "",
    email: `user${i}@paradise.sky`,
    image: "a63e983fd8db218067fece93378ab3aa",
    login: `user${i}`,
    phone: "",
    active: true,
    groups: [
      {
        id: 13,
        name: "1000 jours contacts",
        note: "",
        active: true,
        user_ids: [2807, 2810, 2814, 2848, 2849, 2808, 3081, 2847, 2809, 3],
        created_at: "2021-06-30T09:03:17.634Z",
        updated_at: "2022-02-02T08:12:09.034Z",
        signature_id: 6,
        created_by_id: 3,
        updated_by_id: 3,
        email_address_id: 8,
        assignment_timeout: null,
        follow_up_possible: "yes",
        follow_up_assignment: false,
      },
      {
        id: 14,
        name: "1000 jours blues",
        note: "",
        active: true,
        user_ids: [
          2807, 2810, 2814, 2848, 2849, 2868, 2808, 3081, 2847, 2809, 3,
        ],
        created_at: "2021-06-30T10:52:58.721Z",
        updated_at: "2022-02-02T08:12:09.039Z",
        signature_id: 6,
        created_by_id: 3,
        updated_by_id: 3,
        email_address_id: 10,
        assignment_timeout: null,
        follow_up_possible: "yes",
        follow_up_assignment: false,
      },
    ],
    mobile: "",
    source: "github",
    street: "",
    address: "",
    country: "",
    lastname: `${i}`,
    role_ids: [7],
    verified: false,
    firstname: "User",
    group_ids: {
      13: ["full"],
      14: ["full"],
    },
    created_at: "2021-07-02T15:16:54.085Z",
    department: "",
    last_login: "2022-03-17T16:22:31.215Z",
    updated_at: "2022-03-17T16:22:31.222Z",
    preferences: {
      intro: true,
      locale: "fr-fr",
      notification_config: {
        matrix: {
          create: {
            channel: {
              email: true,
              online: true,
            },
            criteria: {
              no: false,
              subscribed: true,
              owned_by_me: true,
              owned_by_nobody: true,
            },
          },
          update: {
            channel: {
              email: true,
              online: true,
            },
            criteria: {
              no: false,
              subscribed: true,
              owned_by_me: true,
              owned_by_nobody: true,
            },
          },
          escalation: {
            channel: {
              email: true,
              online: true,
            },
            criteria: {
              no: false,
              subscribed: false,
              owned_by_me: true,
              owned_by_nobody: false,
            },
          },
          reminder_reached: {
            channel: {
              email: true,
              online: true,
            },
            criteria: {
              no: false,
              subscribed: false,
              owned_by_me: true,
              owned_by_nobody: false,
            },
          },
        },
      },
    },
    image_source: "https://avatars.githubusercontent.com/u/59702865?v=4",
    login_failed: 0,
    created_by_id: 1,
    out_of_office: false,
    updated_by_id: 2808,
    karma_user_ids: [1798],
    organization_id: null,
    organization_ids: [],
    authorization_ids: [27],
    out_of_office_end_at: null,
    out_of_office_start_at: null,
    out_of_office_replacement_id: null,
  },
  type: "zammad",
})

const getGithubServiceAccount = (i) => ({
  id: `github-service-id-${i}`,
  data: {
    id: "MDQ6VXNlcjU0Njg1NDk=",
    name: `User ${i}`,
    email: "",
    login: `user${i}`,
    teams: [
      {
        id: "MDQ6VGVhbTMxNjk4OTY=",
        name: "DomiFa",
        slug: "domifa",
      },
      {
        id: "T_kwDOAh0HH84AUpY7",
        name: "Admins DomiFa",
        slug: "admins-domifa",
      },
    ],
    avatarUrl:
      "https://avatars.githubusercontent.com/u/5468549?u=32c7c5b1e8e18a369b6fad50399b8a4daf6aff7d&v=4",
  },
  type: "github",
})

const getMattermostServiceAccount = (i) => ({
  id: `mattermost-service-id-${i}`,
  data: {
    id: "iy374oriefg85x968odkfhynfy",
    email: `user${i}@paradise.sky`,
    roles: "system_user",
    locale: "en",
    nickname: "",
    position: "",
    timezone: {
      manualTimezone: "",
      automaticTimezone: "Europe/Paris",
      useAutomaticTimezone: "true",
    },
    username: `user${i}`,
    auth_data: "",
    create_at: 1646991127145,
    delete_at: 0,
    last_name: `${i}`,
    update_at: 1646991140570,
    first_name: "User",
    auth_service: "",
    disable_welcome_email: false,
  },
  type: "mattermost",
})

const getMatomoServiceAccount = (i) => ({
  id: `matomo-service-id-${i}`,
  data: {
    id: "a917809c-0088-4736-b6b5-bac5cd065164",
    email: `user${i}@paradise.sky`,
    login: `user${i}@paradise.sky`,
    sites: [
      {
        name: "PassEmploi",
        site: "56",
        type: "website",
        group: "",
        access: "view",
        idsite: "56",
        currency: "EUR",
        main_url: "",
        timezone: "Europe/Paris",
        ecommerce: "0",
        sitesearch: "1",
        ts_created: "2021-11-03 13:16:09",
        excluded_ips: "",
        creator_login: "toto",
        currency_name: "Euro",
        timezone_name: "France",
        keep_url_fragment: "0",
        excluded_parameters: "",
        exclude_unknown_urls: "0",
        excluded_user_agents: "",
        sitesearch_keyword_parameters: "",
        sitesearch_category_parameters: "",
      },
    ],
    uses_2fa: false,
    date_registered: "2022-02-01 12:11:18",
    superuser_access: "0",
  },
  type: "matomo",
})

const getNextCloudServiceAccount = (i) => ({
  type: "nextcloud",
  id: `nextcloud-service-id-${i}`,
  data: {
    lastLogin: "",
    displayname: `User ${i}`,
    email: `user${i}@paradise.sky`,
  },
})

const getSentryServiceAccount = (i) => ({
  type: "sentry",
  id: `sentry-service-id-${i}`,
  data: {
    id: "60",
    name: `User ${i}`,
    role: "admin",
    user: {
      id: "67",
      name: `User ${i}`,
      email: `user${i}@paradise.sky`,
      avatar: {
        avatarType: "letter_avatar",
        avatarUuid: null,
      },
      emails: [
        {
          id: "74",
          email: `user${i}@paradise.sky`,
          is_verified: false,
        },
      ],
      has2fa: false,
      isStaff: false,
      isActive: true,
      username: `user${i}@paradise.sky`,
      avatarUrl:
        "https://secure.gravatar.com/avatar/5b9ebfc387f3a08eebf32587e7e9e608?s=32&d=mm",
      isManaged: false,
      lastLogin: "2021-06-18T07:20:54.563433Z",
      dateJoined: "2021-06-18T07:20:53.645260Z",
      lastActive: "2021-06-28T08:07:19.621091Z",
      experiments: {},
      isSuperuser: false,
      hasPasswordAuth: true,
    },
    email: `user${i}@paradise.sky`,
    flags: {
      "sso:linked": false,
      "sso:invalid": false,
      "member-limit:restricted": false,
    },
    expired: false,
    pending: false,
    projects: ["docs-rn", "mano"],
    roleName: "Admin",
    dateCreated: "2021-06-18T07:18:49.704753Z",
    inviterName: null,
    inviteStatus: "approved",
  },
})

const getOVHServiceAccount = (i) => ({
  id: `ovh-service-id-${i}`,
  data: {
    id: 135817862,
    login: `user${i}`,
    quota: 10,
    state: "ok",
    domain: "fabrique.social.gouv.fr",
    initial: "",
    lastName: `${i}`,
    firstName: "User",
    configured: true,
    displayName: `User ${i}`,
    renewPeriod: "yearly",
    creationDate: "2021-02-01T15:54:08+01:00",
    currentUsage: 187141,
    spamDetected: false,
    hiddenFromGAL: false,
    lastLogonDate: "2022-04-13T16:23:27+02:00",
    mailingFilter: ["vaderetro"],
    taskPendingId: 0,
    SAMAccountName: "gCs-36f51a870a6a4f44",
    expirationDate: "2023-02-01T15:54:13+01:00",
    lastLogoffDate: "2022-04-13T16:31:40+02:00",
    lastUpdateDate: null,
    spamTicketNumber: null,
    deleteAtExpiration: false,
    passwordLastUpdate: "2021-02-03T13:27:51+01:00",
    primaryEmailAddress: `user${i}@paradise.sky`,
    expirationOutlookDate: null,
    spamAndVirusConfiguration: {
      tagSpam: true,
      checkSPF: false,
      tagVirus: true,
      checkDKIM: false,
      putInJunk: true,
      deleteSpam: false,
      deleteVirus: true,
    },
  },
  type: "ovh",
})

export const users = [
  getUser(1, [getNextCloudServiceAccount(1)]),
  getUser(2, [getSentryServiceAccount(2)]),
  getUser(3, [getMatomoServiceAccount(3)]),
  getUser(4, [getMattermostServiceAccount(4)]),
  getUser(5, [getGithubServiceAccount(5)]),
  getUser(6, [getZammadServiceAccount(6)]),
  getUser(7, [getOVHServiceAccount(7)]),
  getUser(8, [getMattermostServiceAccount(8), getOVHServiceAccount(8)]),
]
